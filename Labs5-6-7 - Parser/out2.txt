
--------------
State: q Index: 0
Working stack: []
Input stack: ['program']
expand

--------------
State: q Index: 0
Working stack: [('program', 44)]
Input stack: ['begin', ':', 'statementlist', 'end']
advance

--------------
State: q Index: 1
Working stack: [('program', 44), 'begin']
Input stack: [':', 'statementlist', 'end']
advance

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':']
Input stack: ['statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42)]
Input stack: ['statement', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38)]
Input stack: ['simplestatement', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35)]
Input stack: ['declaration', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10)]
Input stack: ['type', 'id', ';', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8)]
Input stack: ['simpletype', 'id', ';', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1)]
Input stack: ['number', 'id', ';', 'end']
advance

--------------
State: q Index: 3
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number']
Input stack: ['id', ';', 'end']
advance

--------------
State: q Index: 4
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id']
Input stack: [';', 'end']
advance

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';']
Input stack: ['end']
momentary insuccess

--------------
State: b Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';']
Input stack: ['end']
back

--------------
State: b Index: 4
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id']
Input stack: [';', 'end']
back

--------------
State: b Index: 3
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number']
Input stack: ['id', ';', 'end']
back

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1)]
Input stack: ['number', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 2)]
Input stack: ['character', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 2)]
Input stack: ['character', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 3)]
Input stack: ['string', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 3)]
Input stack: ['string', 'id', ';', 'end']
another try

production : ('string', 3)**

last length : 1

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8)]
Input stack: ['simpletype', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9)]
Input stack: ['arraydeclaration', 'id', ';', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4)]
Input stack: ['simpletype', '[', 'intconst', ']', 'id', ';', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 1)]
Input stack: ['number', '[', 'intconst', ']', 'id', ';', 'end']
advance

--------------
State: q Index: 3
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 1), 'number']
Input stack: ['[', 'intconst', ']', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 3
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 1), 'number']
Input stack: ['[', 'intconst', ']', 'id', ';', 'end']
back

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 1)]
Input stack: ['number', '[', 'intconst', ']', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 2)]
Input stack: ['character', '[', 'intconst', ']', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 2)]
Input stack: ['character', '[', 'intconst', ']', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 3)]
Input stack: ['string', '[', 'intconst', ']', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4), ('simpletype', 3)]
Input stack: ['string', '[', 'intconst', ']', 'id', ';', 'end']
another try

production : ('string', 3)**

last length : 1

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9), ('arraydeclaration', 4)]
Input stack: ['simpletype', '[', 'intconst', ']', 'id', ';', 'end']
another try

production : ('simpletype$[$intconst$]', 4)**

last length : 4

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 9)]
Input stack: ['arraydeclaration', 'id', ';', 'end']
another try

production : ('arraydeclaration', 9)**

last length : 1

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10)]
Input stack: ['type', 'id', ';', 'end']
another try

production : ('type$id$;', 10)**

last length : 3

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 35)]
Input stack: ['declaration', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36)]
Input stack: ['iostmt', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 5)]
Input stack: ['in', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 5)]
Input stack: ['in', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 6)]
Input stack: ['out', 'id', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 6)]
Input stack: ['out', 'id', ';', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 7)]
Input stack: ['out', 'constant', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36), ('iostmt', 7)]
Input stack: ['out', 'constant', ';', 'end']
another try

production : ('out$constant$;', 7)**

last length : 3

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 36)]
Input stack: ['iostmt', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 37)]
Input stack: ['assignmentstmt', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 37), ('assignmentstmt', 11)]
Input stack: ['id', '<-', 'expression', ';', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 37), ('assignmentstmt', 11)]
Input stack: ['id', '<-', 'expression', ';', 'end']
another try

production : ('id$<-$expression$;', 11)**

last length : 4

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38), ('simplestatement', 37)]
Input stack: ['assignmentstmt', 'end']
another try

production : ('assignmentstmt', 37)**

last length : 1

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 38)]
Input stack: ['simplestatement', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39)]
Input stack: ['ifstmt', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39), ('ifstmt', 31)]
Input stack: ['if', 'condition', ':', 'statementlist', 'end_if', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39), ('ifstmt', 31)]
Input stack: ['if', 'condition', ':', 'statementlist', 'end_if', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39), ('ifstmt', 32)]
Input stack: ['if', 'condition', ':', 'statementlist', 'else', 'statementlist', 'end_if', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39), ('ifstmt', 32)]
Input stack: ['if', 'condition', ':', 'statementlist', 'else', 'statementlist', 'end_if', 'end']
another try

production : ('if$condition$:$statementlist$else$statementlist$end_if', 32)**

last length : 7

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 39)]
Input stack: ['ifstmt', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 40)]
Input stack: ['whilestmt', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 40), ('whilestmt', 33)]
Input stack: ['while', 'condition', ':', 'statementlist', 'end_while', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 40), ('whilestmt', 33)]
Input stack: ['while', 'condition', ':', 'statementlist', 'end_while', 'end']
another try

production : ('while$condition$:$statementlist$end_while', 33)**

last length : 5

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 40)]
Input stack: ['whilestmt', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 41)]
Input stack: ['forstmt', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 41), ('forstmt', 34)]
Input stack: ['for', 'assignmentstmt', ',', 'id', ',', 'constant', ':', 'statementlist', 'end_for', 'end']
momentary insuccess

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 41), ('forstmt', 34)]
Input stack: ['for', 'assignmentstmt', ',', 'id', ',', 'constant', ':', 'statementlist', 'end_for', 'end']
another try

production : ('for$assignmentstmt$,$id$,$constant$:$statementlist$end_for', 34)**

last length : 9

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42), ('statement', 41)]
Input stack: ['forstmt', 'end']
another try

production : ('forstmt', 41)**

last length : 1

--------------
State: b Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 42)]
Input stack: ['statement', 'end']
another try

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43)]
Input stack: ['statement', 'statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38)]
Input stack: ['simplestatement', 'statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35)]
Input stack: ['declaration', 'statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10)]
Input stack: ['type', 'id', ';', 'statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8)]
Input stack: ['simpletype', 'id', ';', 'statementlist', 'end']
expand

--------------
State: q Index: 2
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1)]
Input stack: ['number', 'id', ';', 'statementlist', 'end']
advance

--------------
State: q Index: 3
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number']
Input stack: ['id', ';', 'statementlist', 'end']
advance

--------------
State: q Index: 4
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id']
Input stack: [';', 'statementlist', 'end']
advance

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';']
Input stack: ['statementlist', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42)]
Input stack: ['statement', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38)]
Input stack: ['simplestatement', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35)]
Input stack: ['declaration', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10)]
Input stack: ['type', 'id', ';', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8)]
Input stack: ['simpletype', 'id', ';', 'end']
expand

--------------
State: q Index: 5
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1)]
Input stack: ['number', 'id', ';', 'end']
advance

--------------
State: q Index: 6
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number']
Input stack: ['id', ';', 'end']
advance

--------------
State: q Index: 7
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id']
Input stack: [';', 'end']
advance

--------------
State: q Index: 8
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';']
Input stack: ['end']
advance

--------------
State: q Index: 9
Working stack: [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', 'end']
Input stack: []
success
Sequence [('program', 44), 'begin', ':', ('statementlist', 43), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', ('statementlist', 42), ('statement', 38), ('simplestatement', 35), ('declaration', 10), ('type', 8), ('simpletype', 1), 'number', 'id', ';', 'end'] is accepted!

|   Index | Value           |   Parent |   Left Sibling |
|---------+-----------------+----------+----------------|
|       0 | program         |       -1 |             -1 |
|       1 | begin           |        0 |              2 |
|       2 | :               |        0 |              3 |
|       3 | statementlist   |        0 |             21 |
|       4 | statement       |        3 |             13 |
|       5 | simplestatement |        4 |             -1 |
|       6 | declaration     |        5 |             -1 |
|       7 | type            |        6 |             10 |
|       8 | simpletype      |        7 |             -1 |
|       9 | number          |        8 |             -1 |
|      10 | id              |        6 |             11 |
|      11 | ;               |        6 |             -1 |
|      12 | statementlist   |       -1 |             -1 |
|      13 | statement       |        3 |             -1 |
|      14 | simplestatement |       13 |             -1 |
|      15 | declaration     |       14 |             -1 |
|      16 | type            |       15 |             19 |
|      17 | simpletype      |       16 |             -1 |
|      18 | number          |       17 |             -1 |
|      19 | id              |       15 |             20 |
|      20 | ;               |       15 |             -1 |
|      21 | end             |        0 |             -1 |